<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.npb.dbapi.*" />
	<resources mapping="/ui/**" location="/ui/" />
	<default-servlet-handler />

	<annotation-driven />
	<tx:annotation-driven />
	<tx:annotation-driven proxy-target-class="true" />
	
<!-- Place holder -->
	<context:property-placeholder location="/WEB-INF/resources/jdbc.properties"
		order="1" ignore-unresolvable="true" />
	<context:property-placeholder location="/WEB-INF/resources/sql_queries/UserDao_SQL.properties"
		order="2" ignore-unresolvable="true" />
	<context:property-placeholder location="/WEB-INF/resources/sql_queries/UserAppDetailsDao_SQL.properties"
		order="3" ignore-unresolvable="true" />

	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- User service for spring security -->
<!-- 
	<beans:bean id="UserServiceDetails" class="com.dropbox.service.AuthService" />
	<security:http security="none" pattern="/login"></security:http>

	<security:http auto-config="true">
		<security:access-denied-handler	error-page="/login/accessDenied/" />
		<security:intercept-url pattern="/project/**" access="ROLE_ADMIN,ROLE_USER" />
		<security:form-login authentication-failure-url="/login/loginFailure/"
			always-use-default-target="true" login-page="/index.html"
			default-target-url="/login/loginSuccess/" />
	</security:http>

 <security:authentication-manager>  
  	<security:authentication-provider>  
   		<security:jdbc-user-service data-source-ref="dataSource"  
    			users-by-username-query="select username,password, enabled from users where username=?"  
    			authorities-by-username-query="select username, role from user_roles where username =?  " />  
  </security:authentication-provider>  
 </security:authentication-manager> --> 

	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName">
			<beans:value>${jdbc.driverClassName}</beans:value>
		</beans:property>
		<beans:property name="url">
			<beans:value>${jdbc.url}</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>${jdbc.username}</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>${jdbc.password}</beans:value>
		</beans:property>
	</beans:bean>   

 <beans:bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <beans:property name="dataSource" ref="dataSource" />
      <beans:property name="packagesToScan" value="com.dropbox.core" />
      <beans:property name="jpaVendorAdapter">
         <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </beans:property>
      <beans:property name="jpaProperties">
         <beans:props>
            <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
            <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
         </beans:props>
      </beans:property>
   </beans:bean>
   
		<beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- setting maximum upload size -->
          <beans:property name="maxUploadSize" value="10000000000" />
        </beans:bean>
        
       
        
<!-- 	 <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
<!-- 		 <beans:property name="maxUploadSize" value="10000000" /> -->
<!-- 	</beans:bean> -->

<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
<beans:property name="entityManagerFactory" ref="myEmf" />
</beans:bean>
   
 <tx:annotation-driven transaction-manager="transactionManager"/>
   
<beans:bean id="persistenceExceptionTranslationPostProcessor"
 class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans:beans>